<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Query Complexity | Sagnik Mukhopadhyay</title>
    <link>https://sagnikm.github.io/tag/query-complexity/</link>
      <atom:link href="https://sagnikm.github.io/tag/query-complexity/index.xml" rel="self" type="application/rss+xml" />
    <description>Query Complexity</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 04 Jul 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://sagnikm.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Query Complexity</title>
      <link>https://sagnikm.github.io/tag/query-complexity/</link>
    </image>
    
    <item>
      <title>Nearly optimal communication and query complexity of bipartite matching</title>
      <link>https://sagnikm.github.io/publication/focs2022b/</link>
      <pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://sagnikm.github.io/publication/focs2022b/</guid>
      <description>&lt;p&gt;We settle the complexities of the maximum-cardinality bipartite matching problem (BMM)
up to poly-logarithmic factors in five models of computation: the two-party communication,
AND query, OR query, XOR query, and quantum edge query models. Our results answer open
problems that have been raised repeatedly since at least three decades ago [Hajnal, Maass, and
Turan STOC’88; Ivanyos, Klauck, Lee, Santha, and de Wolf FSTTCS’12; Dobzinski, Nisan,
and Oren STOC’14; Nisan SODA’21] and tighten the lower bounds shown by Beniamini and
Nisan [STOC’21] and Zhang [ICALP’04]. We also settle the communication complexity of the
generalizations of BMM, such as maximum-cost bipartite b-matching and transshipment; and the
query complexity of unique bipartite perfect matching (answering an open question by Beniamini
[2022]). Our algorithms and lower bounds follow from simple applications of known techniques
such as cutting planes methods and set disjointness&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Towards Better Separation between Deterministic and Randomized Query Complexity</title>
      <link>https://sagnikm.github.io/publication/fsttcs2015/</link>
      <pubDate>Wed, 01 Jul 2015 00:00:00 +0000</pubDate>
      <guid>https://sagnikm.github.io/publication/fsttcs2015/</guid>
      <description>&lt;p&gt;We show that there exists a Boolean function $F$ which observes the following separations among deterministic query complexity $(D(F))$, randomized zero error query complexity $(R_0(F))$ and randomized one-sided error query complexity $(R_1(F))$: $R_1(F) = \widetilde{O}(\sqrt{D(F)})$ and $R_0(F)=\widetilde{O}(D(F))^{3/4}$. This refutes the conjecture made by Saks and Wigderson that for any Boolean function $f$, $R_0(f)=\Omega({D(f)})^{0.753..}$. This also shows widest separation between $R_1(f)$ and $D(f)$ for any Boolean function. The function $F$ was defined by Göös, Pitassi and Watson who studied it for showing a separation between deterministic decision tree complexity and unambiguous non-deterministic decision tree complexity. Independently of us, Ambainis et al proved that different variants of the function $F$ certify optimal (quadratic) separation between $D(f)$ and $R_0(f)$, and polynomial separation between $R_0(f)$ and $R_1(f)$. Viewed as separation results, our results are subsumed by those of Ambainis et al. However, while the functions considerd in the work of Ambainis et al are different variants of $F$, we work with the original function $F$ itself.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
