<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CONGEST model | Academic</title>
    <link>https://sagnikm.github.io/tag/congest-model/</link>
      <atom:link href="https://sagnikm.github.io/tag/congest-model/index.xml" rel="self" type="application/rss+xml" />
    <description>CONGEST model</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Wed, 20 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://sagnikm.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>CONGEST model</title>
      <link>https://sagnikm.github.io/tag/congest-model/</link>
    </image>
    
    <item>
      <title>Distributed Weighted Min-Cut in Nearly-Optimal Time</title>
      <link>https://sagnikm.github.io/publication/stoc2021a/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://sagnikm.github.io/publication/stoc2021a/</guid>
      <description>&lt;p&gt;Minimum-weight cut (min-cut) is a basic measure of a network&amp;rsquo;s connectivity strength. While the min-cut can be computed efficiently in the sequential setting [Karger STOC&#39;96], there was no efficient way for a distributed network to compute its own min-cut without limiting the input structure or dropping the output quality: In the standard CONGEST model, existing algorithms with nearly-optimal time (e.g. [Ghaffari, Kuhn, DISC&#39;13; Nanongkai, Su, DISC&#39;14]) can guarantee a solution that is $(1+\epsilon)$-approximation at best while the exact $\tilde O(n^{0.8} D^{0.2} + n^{0.9})$-time algorithm [Ghaffari, Nowicki, Thorup, SODA&#39;20] works only on &lt;em&gt;simple&lt;/em&gt; networks (no weights and no parallel edges). Throughout, $n$ and $D$ denote the network&amp;rsquo;s number of vertices and hop-diameter, respectively. For the weighted case, the best bound was $\tilde O(n)$ [Daga, Henzinger, Nanongkai, Saranurak, STOC&#39;19].&lt;/p&gt;
&lt;p&gt;In this paper, we provide an {\em exact} $\tilde O(\sqrt n + D)$-time algorithm for computing min-cut on &lt;em&gt;weighted&lt;/em&gt; networks. Our result improves even the previous algorithm that works only on simple networks. Its time complexity matches the known lower bound up to polylogarithmic factors.
At the heart of our algorithm are a clever routing trick and two structural lemmas regarding the structure of a minimum cut of a graph. These two structural lemmas considerably strengthen and generalize the framework of Mukhopadhyay-Nanongkai [STOC&#39;20] and can be of independent interest.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
