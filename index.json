[{"authors":null,"categories":null,"content":"I am a Lectuer in Algorithms in the Department of Computer Science at the University of Sheffield. In my previous avatar, I was a post-doctoral researcher at the Department of Computer Science in the University of Copenhagen in 2021, at KTH Royal Institute of Technology during 2019-2021, a post-doctoral fellow at IUUK, Charles University in 2018, in the APC group at KTH Royal Institute of Technology during 2017-2018, and a graduate student in theoretical computer science at TIFR Mumbai until August 2017, working under the guidance of Dr. Arkadev Chattopadhyay.\nI was a recipient of TCS Ph.D. Fellowship and my Ph.D. research work was supported by this fellowship.\nNews  Two new papers in FOCS 2022. See publications section. New paper on hypergraph min-cut in IPCO 2022. See publications section.    Download my resumé.\n","date":1656892800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1656892800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a Lectuer in Algorithms in the Department of Computer Science at the University of Sheffield. In my previous avatar, I was a post-doctoral researcher at the Department of Computer Science in the University of Copenhagen in 2021, at KTH Royal Institute of Technology during 2019-2021, a post-doctoral fellow at IUUK, Charles University in 2018, in the APC group at KTH Royal Institute of Technology during 2017-2018, and a graduate student in theoretical computer science at TIFR Mumbai until August 2017, working under the guidance of Dr.","tags":null,"title":"Sagnik Mukhopadhyay","type":"authors"},{"authors":["admin"],"categories":null,"content":"I am a post-doctoral researcher at the Department of Computer Science in the University of Copenhagen since September 2021. My host is Danupon Nanongkai. In my previous avatar, I was a researcher at KTH Royal Institute of Technology during 2019-2021, a post-doctoral fellow at IUUK, Charles University, hosted by Michal Koucký in 2018, in the APC group at KTH Royal Institute of Technology during 2017-2018, and a graduate student in theoretical computer science at TIFR Mumbai until August 2017, working under the guidance of Dr. Arkadev Chattopadhyay.\nI was a recipient of TCS Ph.D. Fellowship and my Ph.D. research work was supported by this fellowship.\nNews  New paper on min-cut in SPAA 2021. See publications section. I will join the the Department of Computer Science at the University of Sheffield as a lecturer (Assistant professor in US terminology) in January 2022.  ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"15e8a6b44854e57989528fbc81361ba2","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a post-doctoral researcher at the Department of Computer Science in the University of Copenhagen since September 2021. My host is Danupon Nanongkai. In my previous avatar, I was a researcher at KTH Royal Institute of Technology during 2019-2021, a post-doctoral fellow at IUUK, Charles University, hosted by Michal Koucký in 2018, in the APC group at KTH Royal Institute of Technology during 2017-2018, and a graduate student in theoretical computer science at TIFR Mumbai until August 2017, working under the guidance of Dr.","tags":null,"title":"","type":"authors"},{"authors":null,"categories":null,"content":"Course information  KTH link My slides: pre-lecture, lecture  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"64ca647db738698674525284bc44053e","permalink":"https://sagnikm.github.io/courses/adv-algo-2019/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/adv-algo-2019/","section":"courses","summary":"co-taught with Danupon Nanongkai. 1.5 lectures, each of 90-minutes duration.","tags":null,"title":"Advanced algorithm","type":"docs"},{"authors":null,"categories":null,"content":"Preamble The area of communication complexity studies measures communication as computational resource—a mathematical abstraction that encompasses all the problems with communication bottleneck. The basic model of communication complexity deals with two parties, namely Alice and Bob. Their task is to compute a function on input which is distributed among them. For doing so, they communicate between each other adhering to a set of rules which they agree upon a priori, and what we measure is the number of bits they need to communicate in order to compute the function. This problem, and many of its variants, appear frequently in practice in many guises and in different levels of abstractions—in network protocols where the goal is to minimize the communication (and thereby error in communication) between two network hubs, in VLSI circuit design where the goal is to minimize energy used and to pack efficiently by decreasing the amount of wires required, also in data-structure, circuit complexity, auctions and a plethora of other interesting areas of study.\nIn this course, we will discuss the classical results in communication complexity and also cover the recent developments and important open problems. We will discuss different models of communication complexity—deterministic, nondeterministic, asymmetric, randomized, and multiparty—and their inter-relationship. We will mostly be interested in showing combinatorial, algebraic and information theoretic techniques for showing communication complexity lower bounds, i.e., for showing that certain functions cannot be computed without a lot of communication no matter how clever the communication algorithm is.\n📢 News  Lectures are over! My (hand-written) lecture notes are available here. We will have two lectures by Jakob Nordström on June 11 and 13. Homework 3 has been posted. Due date: May 30. Homework 2 has been posted. Due date: May 16. Homework 1 has been posted. Due date: May 9. 1 lecture per week during week 16 - 17. 2 lectures per week during week 18 - 25.  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"e7c52f8684e1faf4664163e7e2556b8f","permalink":"https://sagnikm.github.io/courses/comm-comp-2018/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/comm-comp-2018/","section":"courses","summary":"15 lectures, each of 90-minutes duration.","tags":null,"title":"Communication complexity","type":"docs"},{"authors":null,"categories":null,"content":"Course information  Course link  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"e304522ccc447ad2b3e1246d8c995af7","permalink":"https://sagnikm.github.io/courses/comp-comp-2017/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/comp-comp-2017/","section":"courses","summary":"co-taught with Jakob Nordström. 23 lectures, each of 90-minutes duration, out of which 5 were delivered by me.","tags":null,"title":"Advanced algorithm","type":"docs"},{"authors":null,"categories":null,"content":"   Lecture # Content Reference     1 Introduction to communication complexity, protocol partition and tiling, clique vs independent set. KN97 (§ 1.1, 1.2, 2.2, 2.3), Juk12 (§ 3.2, 4.4)   2 Fooling set and rectangle size bound, rank bound, comparison of two techniques, non-determinism. KN97 (§ 1.3, 1.4, 2.1, 2.5), DHS96   3 More on non-determinism, $P = NP \\cap coNP$, Separation of $P$ and $NP \\cap coNP$, $UP$, Decision tree and composed functions. KN97 (§ 2.3 - 2.5), Juk11 (§ 13.4), GPW15   4 Simulation theorem (I): Hitting distribution for $GH$, The simulation algorithm. GPW15, CKLM17   5 Simulation theorem (II): Thickness and its properties, The simulation algorithm. GPW15, CKLM17   6 Randomization: Zero-error, one-sided error, $EQ$ function and separations, Private coin vs public coin. KN97 (§ 3.1 - 3.3)   7 Protocol for $GT, DISJ_{nk}$, Distributional complexity, Yao’s minimax principle. KN97 (§ 3.4), HW07   8 Discrepancy: lower bound for $IP_n, GT_n$; Disjointness under product distribution. KN97 (§ 3.5), CP10, BW16   9 Disjointness under product distribution: Lower bound and upper bound. CP10, BFS86   10 Corruption bound, Razborov’s hard distribution for $DISJ_n$, Index function. KN97 (§ 4.6), CP10, GW16   11 Information theory primer, Index function lower bound, Information complexity. RY18 (§ 6.1 - 6.4), BJKS04, JKS03   12 Direct sum of information complexity, Lower bound for $DISJ_n$. RY18 (§ 6.1 - 6.4), BJKS04, JKS03, Bra17, BR11   13 Asymmetric communication complexity, Richness method, Index function and lopsided $DISJ$, Application in data-structure. KN97 (§ 4.3), MNWS98   14 Lecture by Jakob Nordström (I). Proof systems, Proof complexity and communication complexity, (Critical) block sensitivity. HN12, Notes   15 Lecture by Jakob Nordström (II). Communication complexity of lifted search problem. HN12, Notes    ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"574bd42bedfd657078e07c7f5847590f","permalink":"https://sagnikm.github.io/courses/comm-comp-2018/lectures/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/comm-comp-2018/lectures/","section":"courses","summary":"Lecture # Content Reference     1 Introduction to communication complexity, protocol partition and tiling, clique vs independent set. KN97 (§ 1.1, 1.2, 2.2, 2.3), Juk12 (§ 3.","tags":null,"title":"Lectures","type":"docs"},{"authors":null,"categories":null,"content":"[Bra17] Mark Braverman. Interactive Information Complexity. SIAM Review, 59(4):803-846, 2017. DOI \n[BFS86] László Babai, Peter Frankl, and Janos Simon. Complexity classes in communication complexity theory (preliminary version). In Proc. 27th IEEE Symp. on Foundations of Comp. Science (FOCS), pages 337-347, 1986. DOI \n[BJKS04] Ziv Bar-Yossef, T. S. Jayram, Ravi Kumar, and D. Sivakumar. An information statistics approach to data stream and communication complexity. J. Computer and System Sciences, 68(4):702-732, June 2004. (Preliminary Version in 43rd FOCS, 2002). DOI \n[BR11] Mark Braverman and Anup Rao. Towards coding for maximum errors in interactive communication. In STOC, pages 159-166, 2011. DOI \n[BW16] Mark Braverman and Omri Weinstein. A Discrepancy Lower Bound for Information Complexity. Algorithmica, 76(3):846-864, 2016. DOI \n[CP10] Arkadev Chattopadhyay and Toniann Pitassi. The story of set disjointness. SIGACT News, 41(3):59-85, 2010. DOI \n[CKLM17] Arkadev Chattopadhyay, Michal Koucký, Bruno Loff and Sagnik Mukhopadhyay. Simulation Theorems via Pseudorandom Properties. CoRR.abs/1704.06807, 2017. ArXiv \n[DHS96] Martin Dietzfelbinger, Juraj Hromkovic, and Georg Schnitger. A Comparison of Two Lower-Bound Methods for Communication Complexity. Theor. Comput. Sci., 168(1):39-51, 1996. DOI \n[GPW15] Mika Göös, Toniann Pitassi and Thomas Watson. Deterministic Communication vs. Partition Number. Proceedings of 56th FOCS, 1077-1088, 2015. DOI \n[GW16] Mika Göös and Thomas Watson. Communication Complexity of Set-Disjointness for All Probabilities. Theory of Computing, 12(1):1-23, 2016. DOI \n[HN12] Trinh Huynh and Jakob Nordström. On the virtue of succinct proofs: amplifying communication complexity hardness to time-space trade-offs in proof complexity. Proceedings of the 44th STOC, 233-248, 2012. DOI \n[HW07] Johan Håstad and Avi Wigderson. The Randomized Communication Complexity of Set Disjointness. Theory of Computing, 3(1):211-219, 2007. DOI \n[JKS03] T. S. Jayram, Ravi Kumar, and D. Sivakumar. Two applications of information complexity. In Proc. 35th ACM Symp. on Theory of Computing (STOC), pages 673-682, 2003. DOI \n[Juk11] Stasys Jukna. Extremal Combinatorics - With Applications in Computer Science. Springer, 2011. DOI \n[Juk12] Stasys Jukna. Boolean Function Complexity - Advances and Frontiers. Springer, 2012. DOI \n[KN97] Eyal Kushilevitz and Noam Nisan. Communication Complexity. Cambridge University Press, 1997. DOI \n[MNWS98] Peter Bro Miltersen, Noam Nisan, Shmuel Safra and Avi Wigderson On Data Structures and Asymmetric Communication Complexity. J. Comput. Syst. Sci., 57(1): 37-49, 1998. DOI \n[RY18] Anup Rao and Amir Yehudayoff. Communication Complexity (Early Draft). URL \n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"e7e28285228d0113bd73383ff6ce43f3","permalink":"https://sagnikm.github.io/courses/comm-comp-2018/references/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/comm-comp-2018/references/","section":"courses","summary":"[Bra17] Mark Braverman. Interactive Information Complexity. SIAM Review, 59(4):803-846, 2017. DOI \n[BFS86] László Babai, Peter Frankl, and Janos Simon. Complexity classes in communication complexity theory (preliminary version). In Proc. 27th IEEE Symp.","tags":null,"title":"References","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://sagnikm.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Simon Apers","Yuval Efron","Pawel Gawrychowski","Troy Lee","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"We study the complexity of determining the edge connectivity of a simple graph with cut queries. We show that (i) there is a bounded-error randomized algorithm that computes edge connectivity with $O(n)$ cut queries, and (ii) there is a bounded-error quantum algorithm that computes edge connectivity with $\\tilde O(\\sqrt{n})$ cut queries. To prove these results we introduce a new technique, called star contraction, to randomly contract edges of a graph while preserving non-trivial minimum cuts. In star contraction vertices randomly contract an edge incident on a small set of randomly chosen ‘center’ vertices. In contrast to the related 2-out contraction technique of Ghaffari, Nowicki, and Thorup [SODA\u0026#39;20], star contraction only contracts vertex-disjoint star subgraphs, which allows it to be efficiently implemented via cut queries.\nThe $O(n)$ bound from item (i) was not known even for the simpler problem of connectivity, and it improves the $O(n \\log^3 n)$ upper bound by Rubinstein, Schramm, and Weinberg [ITCS\u0026#39;18]. The bound is tight under the reasonable conjecture that the randomized communication complexity of connectivity is $\\Omega(n \\log n)$, an open question since the seminal work of Babai, Frankl, and Simon [FOCS\u0026#39;86]. The bound also excludes using edge connectivity on simple graphs to prove a superlinear randomized query lower bound for minimizing a symmetric submodular function. The quantum algorithm from item~(ii) gives a nearly-quadratic separation with the randomized complexity, and addresses an open question of Lee, Santha, and Zhang [SODA\u0026#39;21]. The algorithm can alternatively be viewed as computing the edge connectivity of a simple graph with $\\tilde O(\\sqrt{n})$ matrix-vector multiplication queries to its adjacency matrix.\nFinally, we demonstrate the use of star contraction outside of the cut query setting by designing a one-pass semi-streaming algorithm for computing edge connectivity in the complete vertex arrival setting. This contrasts with the edge arrival setting where two passes are required.\n","date":1656892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656892800,"objectID":"489aedaccccd4b3e7e0c14b13af9efe6","permalink":"https://sagnikm.github.io/publication/focs2022a/","publishdate":"2022-01-14T00:00:00Z","relpermalink":"/publication/focs2022a/","section":"publication","summary":"We study the complexity of determining the edge connectivity of a simple graph with cut queries. We show that (i) there is a bounded-error randomized algorithm that computes edge connectivity with $O(n)$ cut queries, and (ii) there is a bounded-error quantum algorithm that computes edge connectivity with $\\tilde O(\\sqrt{n})$ cut queries.","tags":["Graph algorithm","Cut query"],"title":"Cut Query Algorithms with Star Contraction","type":"publication"},{"authors":["Joakim Blikstad","Jan van den Brand","Yuval Efron","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"We settle the complexities of the maximum-cardinality bipartite matching problem (BMM) up to poly-logarithmic factors in five models of computation: the two-party communication, AND query, OR query, XOR query, and quantum edge query models. Our results answer open problems that have been raised repeatedly since at least three decades ago [Hajnal, Maass, and Turan STOC’88; Ivanyos, Klauck, Lee, Santha, and de Wolf FSTTCS’12; Dobzinski, Nisan, and Oren STOC’14; Nisan SODA’21] and tighten the lower bounds shown by Beniamini and Nisan [STOC’21] and Zhang [ICALP’04]. We also settle the communication complexity of the generalizations of BMM, such as maximum-cost bipartite b-matching and transshipment; and the query complexity of unique bipartite perfect matching (answering an open question by Beniamini [2022]). Our algorithms and lower bounds follow from simple applications of known techniques such as cutting planes methods and set disjointness\n","date":1656892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656892800,"objectID":"8d923aa505bd2e28f4bda2d5b2aacd67","permalink":"https://sagnikm.github.io/publication/focs2022b/","publishdate":"2022-07-04T00:00:00Z","relpermalink":"/publication/focs2022b/","section":"publication","summary":"We settle the complexities of the maximum-cardinality bipartite matching problem (BMM) up to poly-logarithmic factors in five models of computation: the two-party communication, AND query, OR query, XOR query, and quantum edge query models.","tags":["Graph algorithm","Communication complexity","Query Complexity"],"title":"Nearly Optimal Communication and Query Complexity of Bipartite Matching","type":"publication"},{"authors":["Calvin Beideman","Karthekeyan Chandrasekaran","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"We design an algorithm for computing connectivity in hypergraphs which runs in time $\\hat O_r(p + \\min{\\lambda n^2, n^r/\\lambda})$, where $p$ is the size, $n$ is the number of vertices, $r$ is the rank (size of the largest hyperedge), and $\\lambda$ is the connectivity of the hypergraph. The $\\hat O_r(\\cdot)$ hides terms that are subpolynomial in the main parameter and terms that depend only on $r$. Our algorithm is faster than existing algorithms when the connectivity $\\lambda$ is $\\Omega(n^{(r-2)/2})$. The heart of our algorithm is a structural result regarding min-cuts in simple hypergraphs. We show a trade-off between the number of hyperedges taking part in all min-cuts and the size of the smaller side of the min-cut. This structural result can be viewed as a generalization of a well-known structural theorem for simple graphs [Kawarabayashi-Thorup, JACM 19]. We extend the framework of expander decomposition to simple hypergraphs in order to prove this structural result. We also make the proof of the structural result constructive to obtain our faster hypergraph connectivity algorithm.\n","date":1645142400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645142400,"objectID":"5dfccad1e13c62c3a7f45e7647d0515a","permalink":"https://sagnikm.github.io/publication/ipco2022/","publishdate":"2020-04-20T00:00:00Z","relpermalink":"/publication/ipco2022/","section":"publication","summary":"We design an algorithm for computing connectivity in hypergraphs which runs in time $\\hat O_r(p + \\min{\\lambda n^2, n^r/\\lambda})$, where $p$ is the size, $n$ is the number of vertices, $r$ is the rank (size of the largest hyperedge), and $\\lambda$ is the connectivity of the hypergraph.","tags":["Hypergraph algorithm","Min-cut"],"title":"Faster Connectivity in Low-Rank Hypergraphs via Expander Decomposition","type":"publication"},{"authors":["Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"It has been observed independently by many researchers that the isolating cut lemma of Li and Panigrahi [FOCS 2020] can be easily extended to obtain new algorithms for finding the non-trivial minimizer of a symmetric submodular function and solving the hypergraph minimum cut problem. This note contains these observations.\n","date":1617062400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617062400,"objectID":"71ee7ab12488f6cf51c371d351843e4c","permalink":"https://sagnikm.github.io/publication/isolating_lemma_preprint/","publishdate":"2020-04-20T00:00:00Z","relpermalink":"/publication/isolating_lemma_preprint/","section":"publication","summary":"It has been observed independently by many researchers that the isolating cut lemma of Li and Panigrahi [FOCS 2020] can be easily extended to obtain new algorithms for finding the non-trivial minimizer of a symmetric submodular function and solving the hypergraph minimum cut problem.","tags":["Graph algorithm","Submodular function minimization"],"title":"A Note on Isolating Cut Lemma for Submodular Function Minimization","type":"publication"},{"authors":["Andrés López-Martínez","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"We present the first work-optimal polylogarithmic-depth parallel algorithm for the minimum cut problem on non-sparse graphs. For $m\\geq n^{1+\\epsilon}$ for any constant $\\epsilon\u0026gt;0$, our algorithm requires $O(m \\log n)$ work and $O(\\log^3 n)$ depth and succeeds with high probability. Its work matches the best $O(m \\log n)$ runtime for sequential algorithms [MN STOC’20; GMW SOSA\u0026#39;21]. This improves the previous best work by Geissmann and Gianinazzi [SPAA\u0026#39;18] by $O(\\log^3 n)$ factor, while matching the depth of their algorithm. To do this, we design a work-efficient approximation algorithm and parallelize the recent sequential algorithms [MN STOC\u0026#39;21; GMW SOSA\u0026#39;21] that exploit a connection between 2-respecting minimum cuts and 2-dimensional orthogonal range searching.\n","date":1613606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1613606400,"objectID":"3a90fbb02e878377f648afc831d59fee","permalink":"https://sagnikm.github.io/publication/spaa2021/","publishdate":"2020-04-20T00:00:00Z","relpermalink":"/publication/spaa2021/","section":"publication","summary":"We present the first work-optimal polylogarithmic-depth parallel algorithm for the minimum cut problem on non-sparse graphs. For $m\\geq n^{1+\\epsilon}$ for any constant $\\epsilon\u003e0$, our algorithm requires $O(m \\log n)$ work and $O(\\log^3 n)$ depth and succeeds with high probability.","tags":["Graph algorithm","Parallel algorithm","Min-cut"],"title":"Work-Optimal Parallel Minimum Cuts for Non-Sparse Graphs","type":"publication"},{"authors":["Michal Dory","Yuval Efron","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"Minimum-weight cut (min-cut) is a basic measure of a network’s connectivity strength. While the min-cut can be computed efficiently in the sequential setting [Karger STOC\u0026#39;96], there was no efficient way for a distributed network to compute its own min-cut without limiting the input structure or dropping the output quality: In the standard CONGEST model, existing algorithms with nearly-optimal time (e.g. [Ghaffari, Kuhn, DISC\u0026#39;13; Nanongkai, Su, DISC\u0026#39;14]) can guarantee a solution that is $(1+\\epsilon)$-approximation at best while the exact $\\tilde O(n^{0.8} D^{0.2} + n^{0.9})$-time algorithm [Ghaffari, Nowicki, Thorup, SODA\u0026#39;20] works only on simple networks (no weights and no parallel edges). Throughout, $n$ and $D$ denote the network’s number of vertices and hop-diameter, respectively. For the weighted case, the best bound was $\\tilde O(n)$ [Daga, Henzinger, Nanongkai, Saranurak, STOC\u0026#39;19].\nIn this paper, we provide an {\\em exact} $\\tilde O(\\sqrt n + D)$-time algorithm for computing min-cut on weighted networks. Our result improves even the previous algorithm that works only on simple networks. Its time complexity matches the known lower bound up to polylogarithmic factors. At the heart of our algorithm are a clever routing trick and two structural lemmas regarding the structure of a minimum cut of a graph. These two structural lemmas considerably strengthen and generalize the framework of Mukhopadhyay-Nanongkai [STOC\u0026#39;20] and can be of independent interest.\n","date":1611100800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611100800,"objectID":"ac8a133b5a2855712936e53ef261f34e","permalink":"https://sagnikm.github.io/publication/stoc2021a/","publishdate":"2021-01-20T00:00:00Z","relpermalink":"/publication/stoc2021a/","section":"publication","summary":"Minimum-weight cut (min-cut) is a basic measure of a network’s connectivity strength. While the min-cut can be computed efficiently in the sequential setting [Karger STOC'96], there was no efficient way for a distributed network to compute its own min-cut without limiting the input structure or dropping the output quality: In the standard CONGEST model, existing algorithms with nearly-optimal time (e.","tags":["Graph algorithm","CONGEST model","Min-cut"],"title":"Distributed Weighted Min-Cut in Nearly-Optimal Time","type":"publication"},{"authors":["Joakim Blikstad","Jan van den Brand","Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"The matroid intersection problem is a fundamental problem that has been extensively studied for half a century. In the classic version of this problem, we are given two matroids ${\\cal M}_1 = (V, {\\cal I}_1)$ and ${\\cal M}_2 = (V, {\\cal I}_2)$ on a comment ground set $V$ of $n$ elements, and then we have to find the largest common independent set $S \\in {\\cal I}_1 \\cap {\\cal I}_2$ by making independence oracle queries of the form ‘‘Is $S \\in {\\cal I}_1$?’’ or ‘‘Is $S \\in {\\cal I}_2$?’’ for $S \\subseteq V$. The goal is to minimize the number of queries.\nBeating the existing $\\tilde O(n^2)$ bound, known as the quadratic barrier, is an open problem that captures the limits of techniques from two lines of work. The first one is the classic Cunningham’s algorithm [SICOMP 1986], whose $\\tilde O(n^2)$-query implementations were shown by CLS+ [FOCS 2019] and Nguyen [2019]. More generally, these algorithms take $\\tilde O(nr)$ queries where $r$ denotes the rank which can be as big as $n$. The other one is the general cutting plane method of Lee, Sidford, and Wong [FOCS 2015]. The only progress towards breaking the quadratic barrier requires either {\\em approximation} algorithms or a more powerful rank oracle query [CLS+ FOCS 2019]. No exact algorithm with $o(n^2)$ independence queries was known.\nIn this work, we break the quadratic barrier with a randomized algorithm guaranteeing $\\tilde O(n^{9/5})$ independence queries with high probability, and a deterministic algorithm guaranteeing $\\tilde O(n^{11/6})$ independence queries. Our key insight is simple and fast algorithms to solve a graph reachability problem that arose in the standard augmenting path framework [Edmonds 1968]. Combining this with previous exact and approximation algorithms leads to our results.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"46ab3f6b85417fc31f4002b427056779","permalink":"https://sagnikm.github.io/publication/stoc2021b/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/publication/stoc2021b/","section":"publication","summary":"The matroid intersection problem is a fundamental problem that has been extensively studied for half a century. In the classic version of this problem, we are given two matroids ${\\cal M}_1 = (V, {\\cal I}_1)$ and ${\\cal M}_2 = (V, {\\cal I}_2)$ on a comment ground set $V$ of $n$ elements, and then we have to find the largest common independent set $S \\in {\\cal I}_1 \\cap {\\cal I}_2$ by making independence oracle queries of the form ‘‘Is $S \\in {\\cal I}_1$?","tags":["Matroid intersection","Reachability"],"title":"Breaking the Quadratic Barrier for Matroid Intersection","type":"publication"},{"authors":["Sagnik Mukhopadhyay","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://sagnikm.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Sagnik Mukhopadhyay","Danupon Nanongkai"],"categories":null,"content":"Consider the following 2-respecting min-cut problem. Given a weighted graph $G$ and its spanning tree $T$, find the minimum cut among the cuts that contain at most two edges in $T$. This problem is an important subroutine in Karger’s celebrated randomized near-linear-time min-cut algorithm [STOC\u0026#39;96]. We present a new approach for this problem which can be easily implemented in many settings, leading to the following randomized min-cut algorithms for weighted graphs.\n  An $O\\left(m\\frac{\\log^2 n}{\\log\\log n} + n\\log^6 n\\right)$-time sequential algorithm: This improves Karger’s long-standing $O(m \\log^3 n)$ and $O\\left(m\\frac{(\\log^2 n)\\log (n^2/m)}{\\log\\log n} + n\\log^6 n\\right)$ bounds when the input graph is not extremely sparse or dense. Improvements over Karger’s bounds were previously known only under a rather strong assumption that the input graph is {\\em simple} (unweighted without parallel edges) [Henzinger, Rao, Wang, SODA\u0026#39;17; Ghaffari, Nowicki, Thorup, SODA\u0026#39;20]. For unweighted graphs (possibly with parallel edges) and using bit operations, our bound can be further improved to $O\\left(m\\frac{\\log^{1.5} n}{\\log\\log n} + n\\log^6 n\\right)$.\n  An algorithm that requires $\\tilde O(n)$ cut queries to compute the min-cut of a weighted graph: This answers an open problem by Rubinstein, Schramm, and Weinberg [ITCS\u0026#39;18], who obtained a similar bound for simple graphs. Our bound is tight up to polylogarithmic factors.\n  A streaming algorithm that requires $\\tilde O(n)$ space and $O(\\log n)$ passes to compute the min-cut: The only previous non-trivial exact min-cut algorithm in this setting is the 2-pass $\\tilde O(n)$-space algorithm on simple graphs [Rubenstein et al. ITCS 2018] observed by Assadi, Chen, and Khanna [STOC\u0026#39;19]).\n  In contrast to Karger’s 2-respecting min-cut algorithm which deploys sophisticated dynamic programming techniques, our approach exploits some cute structural properties so that it only needs to compute the values of $\\tilde O(n)$ cuts corresponding to removing $\\tilde O(n)$ pairs of tree edges, an operation that can be done quickly in many settings.\n","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"c5ced4b852f5572c6160814eb4043bba","permalink":"https://sagnikm.github.io/publication/stoc2020/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/publication/stoc2020/","section":"publication","summary":"Consider the following 2-respecting min-cut problem. Given a weighted graph $G$ and its spanning tree $T$, find the minimum cut among the cuts that contain at most two edges in $T$.","tags":["Query algorithm","Streaming","Sequential model","Graph algorithm","Min-cut"],"title":"Weighted Min-Cut: Sequential, Cut-Query and Streaming Algorithms","type":"publication"},{"authors":["Arkadev Chattopadhyay","Michal Koucký","Bruno Loff","Sagnik Mukhopadhyay"],"categories":null,"content":"We generalize the deterministic simulation theorem of Raz-Mckenzie, to any gadget which satisfies a certain hitting property. We prove that Inner-product and gap-Hamming satisfy this property, and, as a corollary, we obtain deterministic simulation theorem for these gadgets, where the gadget’s input-size is logarithmic in the input-size of the outer function. This yields the first deterministic simulation theorem with a logarithmic gadget size, answering an open question posed by Goos-Pitassi-Watson.\nOur result also implies the previous results for the Indexing gadget, with better parameters than was previously known. Moreover, a simulation theorem with logarithmic-sized gadget implies a quadratic separation in deterministic communication complexity and logarithm of the $1$-partition number, no matter how high the $1$-partition number is with respect to the input size—something which is not achievable by previous results of Goos-Pitassi-Watson.\n","date":1567296000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567296000,"objectID":"0cfc4bd41d9c91280400e82ec34cb278","permalink":"https://sagnikm.github.io/publication/cc2019/","publishdate":"2019-09-01T00:00:00Z","relpermalink":"/publication/cc2019/","section":"publication","summary":"We generalize the deterministic simulation theorem of Raz-Mckenzie, to any gadget which satisfies a certain hitting property. We prove that Inner-product and gap-Hamming satisfy this property, and, as a corollary, we obtain deterministic simulation theorem for these gadgets, where the gadget’s input-size is logarithmic in the input-size of the outer function.","tags":["Source Themes"],"title":"Simulation Theorems via Pseudo-random Properties","type":"publication"},{"authors":["Bruno Loff","Sagnik Mukhopadhyay"],"categories":null,"content":"We show a deterministic simulation (or lifting) theorem for composed problems $f \\circ \\mathsf{Eq}_n$ where the inner function (the gadget) is Equality on $n$ bits. When $f$ is a total function on $p$ bits, it is easy to show via a rank argument that the communication complexity of $f\\circ \\mathsf{Eq}_n$ is $\\Omega(deg(f) \\cdot n)$. However, there is a surprising counter-example of a partial function $f$ on $p$ bits, such that any completion $f\u0026#39;$ of $f$ has $\\deg(f\u0026#39;) = \\Omega(p)$, and yet $f \\circ \\mathsf{Eq}_n$ has communication complexity $O(n)$. Nonetheless, we are able to show that the communication complexity of $f \\circ \\mathsf{Eq}_n$ is at least $D(f) \\cdot n$ for a complexity measure $D(f)$ which is closely related to the AND-query complexity of $f$ and is lower-bounded by the logarithm of the leaf complexity of $f$. As a corollary, we also obtain lifting theorems for the set-disjointness gadget, and a lifting theorem in the context of parity decision-trees, for the NOR gadget.\nAs an application, we prove a tight lower-bound for the deterministic communication complexity of the communication problem, where Alice and Bob are each given $p$-many $n$-bit strings, with the promise that either all of the strings are distinct, or all-but-one of the strings are distinct, and they wish to know which is the case. We show that the complexity of this problem is $\\Theta(p \\cdot n)$.\n","date":1551398400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551398400,"objectID":"3813fa737205e1cf2c60f71686c13409","permalink":"https://sagnikm.github.io/publication/stacs2019/","publishdate":"2019-03-01T00:00:00Z","relpermalink":"/publication/stacs2019/","section":"publication","summary":"We show a deterministic simulation (or lifting) theorem for composed problems $f \\circ \\mathsf{Eq}_n$ where the inner function (the gadget) is Equality on $n$ bits. When $f$ is a total function on $p$ bits, it is easy to show via a rank argument that the communication complexity of $f\\circ \\mathsf{Eq}_n$ is $\\Omega(deg(f) \\cdot n)$.","tags":["Communication complexity","Simulation theorem"],"title":"Lifting Theorems for Equality","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  **Two**  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}   Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://sagnikm.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Arkadev Chattopadhyay","Michal Koucký","Bruno Loff","Sagnik Mukhopadhyay"],"categories":null,"content":"We develop a technique for proving lower bounds in the setting of asymmetric communication, a model that was introduced in the famous works of Miltersen (STOC\u0026#39;94) and Miltersen, Nisan, Safra and Wigderson (STOC\u0026#39;95). At the core of our technique is a novel simulation theorem. Alice gets a $p \\times n$ matrix $x$ over $\\mathbb F_2$ and Bob gets a vector $y \\in \\mathbb F_2^n$. Alice and Bob need to evaluate $f(x\\cdot y)$ for a Boolean function $f$. Our simulation theorems show that a deterministic/randomized communication protocol exists for this problem, with cost $C\\cdot n$ for Alice and $C$ for Bob, if and only if there exists a deterministic/randomized \\emph{parity decision tree} of cost $\\Theta(C)$ for evaluating $f$. As applications of this technique, we obtain the following results:\n  The first strong lower-bounds against randomized data-structure schemes for the Vector-Matrix-Vector product problem over $\\mathbb F_2$. Moreover, our method yields strong lower bounds even when the data-structure scheme has tiny advantage over random guessing.\n  The first lower bounds against randomized data-structures schemes for two natural Boolean variants of Orthogonal Vector Counting.\n  We construct an asymmetric communication problem and obtain a deterministic lower-bound for it which is provably better than any lower-bound that may be obtained by the classical Richness Method of Miltersen et al. This seems to be the first known limitation of the Richness Method in the context of proving deterministic lower bounds.\n  ","date":1530403200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530403200,"objectID":"496874ce2c7dd78e66a6798bd9021283","permalink":"https://sagnikm.github.io/publication/stoc2018/","publishdate":"2018-07-01T00:00:00Z","relpermalink":"/publication/stoc2018/","section":"publication","summary":"We develop a technique for proving lower bounds in the setting of asymmetric communication, a model that was introduced in the famous works of Miltersen (STOC'94) and Miltersen, Nisan, Safra and Wigderson (STOC'95).","tags":["Communication complexity","Data structure lower bound","Simulation theorem"],"title":"Simulation Beats Richness: New Data-Structure Lower Bounds","type":"publication"},{"authors":["Arkadev Chattopadhyay","Michal Koucký","Bruno Loff","Sagnik Mukhopadhyay"],"categories":null,"content":"We consider the problem of elimination in communication complexity, that was first raised by Ambainis et al. and later studied by Beimel et al. for its connection to the famous direct sum question. In this problem, let $f : {0, 1}^{2n} \\to {0, 1}$ be any boolean function. Alice and Bob get $k$ inputs $x_1, \\cdots , x_k$ and $y_1, \\cdots, y_k$ respectively, with $x_i, y_i \\in {0, 1}^n$. They want to output a $k$-bit vector $v$, such that there exists one index $i$ for which $v_i \\neq f(x_i, y_i)$. We prove a general result lower bounding the randomized communication complexity of the elimination problem for $f$ using its discrepancy. Consequently, we obtain strong lower bounds for the functions InnerProduct and Greater-Than, that work for exponentially larger values of $k$ than the best previous bounds. To prove our result, we use a pseudo-random notion called regularity that was first used by Raz and Wigderson. We show that functions with small discrepancy are regular. We also observe that a weaker notion, that we call weak-regularity, already implies hardness of elimination. Finally, we give a different proof, borrowing ideas from Viola, to show that Greater-Than is weakly regular.\n","date":1498867200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1498867200,"objectID":"d2c0c950de3cf490f2c0140d87648357","permalink":"https://sagnikm.github.io/publication/stacs-2017/","publishdate":"2017-07-01T00:00:00Z","relpermalink":"/publication/stacs-2017/","section":"publication","summary":"We consider the problem of elimination in communication complexity, that was first raised by Ambainis et al. and later studied by Beimel et al. for its connection to the famous direct sum question.","tags":["Communication complexity","Elimination","Direct sum","Discrepancy"],"title":"Lower Bounds for Elimination via Weak Regularity","type":"publication"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://sagnikm.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":["Sagnik Mukhopadhyay","Swagato Sanyal","Jaikumar Radhakrishnan"],"categories":null,"content":"Saks and Wigderson [FOCS 1986] conjectured that $R_0(f)=\\Omega(D(f)^{0.753\\ldots})$ for all Boolean functions $f$. We show that for the pointer function $GPW_{r \\times s}$ defined by Goos, Pitassi, and Watson [FOCS 2015], the following hold:\n  $R_1(GPW_{r \\times s})=\\tilde\\Theta(r + s)$ and\n  $R_1(\\overline{GPW_{r \\times s}})=\\tilde \\Theta(r + \\sqrt{r}s)$,\n  where $R_1$ denotes the randomized one-sided error query complexity. These results imply that (i) $R_0(GPW_{s^2 \\times s})=O(D(GPW_{s^2 \\times s})^{2/3})$, thereby refuting the conjecture of Saks and Wigderson, and (ii) $R_1(GPW_{s \\times s})=\\tilde O(R_0(GPW_{s \\times s})^{2/3})$, thereby providing a polynomial separation between the randomized zero-error and one sided error query complexity measures.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"2145fa2bb9ac3c1fb32ae09230d74606","permalink":"https://sagnikm.github.io/publication/siam2018/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"/publication/siam2018/","section":"publication","summary":"Saks and Wigderson [FOCS 1986] conjectured that $R_0(f)=\\Omega(D(f)^{0.753\\ldots})$ for all Boolean functions $f$. We show that for the pointer function $GPW_{r \\times s}$ defined by Goos, Pitassi, and Watson [FOCS 2015], the following hold:","tags":["Source Themes"],"title":"Separation between Deterministic and Randomized Query Complexity","type":"publication"},{"authors":["Sagnik Mukhopadhyay","Swagato Sanyal"],"categories":null,"content":"We show that there exists a Boolean function $F$ which observes the following separations among deterministic query complexity $(D(F))$, randomized zero error query complexity $(R_0(F))$ and randomized one-sided error query complexity $(R_1(F))$: $R_1(F) = \\widetilde{O}(\\sqrt{D(F)})$ and $R_0(F)=\\widetilde{O}(D(F))^{3/4}$. This refutes the conjecture made by Saks and Wigderson that for any Boolean function $f$, $R_0(f)=\\Omega({D(f)})^{0.753..}$. This also shows widest separation between $R_1(f)$ and $D(f)$ for any Boolean function. The function $F$ was defined by Göös, Pitassi and Watson who studied it for showing a separation between deterministic decision tree complexity and unambiguous non-deterministic decision tree complexity. Independently of us, Ambainis et al proved that different variants of the function $F$ certify optimal (quadratic) separation between $D(f)$ and $R_0(f)$, and polynomial separation between $R_0(f)$ and $R_1(f)$. Viewed as separation results, our results are subsumed by those of Ambainis et al. However, while the functions considerd in the work of Ambainis et al are different variants of $F$, we work with the original function $F$ itself.\n","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"6909282ead740f0be0c835f33bf9215b","permalink":"https://sagnikm.github.io/publication/fsttcs2015/","publishdate":"2015-07-01T00:00:00Z","relpermalink":"/publication/fsttcs2015/","section":"publication","summary":"We show that there exists a Boolean function $F$ which observes the following separations among deterministic query complexity $(D(F))$, randomized zero error query complexity $(R_0(F))$ and randomized one-sided error query complexity $(R_1(F))$: $R_1(F) = \\widetilde{O}(\\sqrt{D(F)})$ and $R_0(F)=\\widetilde{O}(D(F))^{3/4}$.","tags":["Query complexity","Randomization","Deterministic"],"title":"Towards Better Separation between Deterministic and Randomized Query Complexity","type":"publication"},{"authors":["Arkadev Chattopadhyay","Sagnik Mukhopadhyay"],"categories":null,"content":"We consider the point-to-point message passing model of communication in which there are $k$ processors with individual private inputs, each $n$-bit long. Each processor is located at the node of an underlying undirected graph and has access to private random coins. An edge of the graph is a private channel of communication between its endpoints. The processors have to compute a given function of all their inputs by communicating along these channels. While this model has been widely used in distributed computing, strong lower bounds on the amount of communication needed to compute simple functions have just begun to appear.\nIn this work, we prove a tight lower bound of $\\Omega(kn)$ on the communication needed for computing the Tribes function, when the underlying graph is a star of $k+1$ nodes that has $k$ leaves with inputs and a center with no input. Lower bound on this topology easily implies comparable bounds for others. Our lower bounds are obtained by building upon the recent information theoretic techniques of Braverman et.al [FOCS\u0026#39;13] and combining it with the earlier work of Jayram, Kumar and Sivakumar [STOC\u0026#39;03]. This approach yields information complexity bounds that is of independent interest.\n","date":1435708800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1435708800,"objectID":"d35100ed8001753a659819b073c3bb07","permalink":"https://sagnikm.github.io/publication/stacs2015/","publishdate":"2015-07-01T00:00:00Z","relpermalink":"/publication/stacs2015/","section":"publication","summary":"We consider the point-to-point message passing model of communication in which there are $k$ processors with individual private inputs, each $n$-bit long. Each processor is located at the node of an underlying undirected graph and has access to private random coins.","tags":["Communication complexity","Elimination","Direct sum","Discrepancy"],"title":"Tribes is Hard in Message-passing Model","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://sagnikm.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]